services:
  grafana:
    image: grafana/grafana:11.6.1
    container_name: grafana
    restart: unless-stopped
    user: ":"
    env_file:
      - .env.grafana
    ports:
      - "3000:3000"
    volumes:
      - ${DATA_DIR}/grafana/data:/var/lib/grafana
      - ${DATA_DIR}/grafana:/etc/grafana/provisioning/datasources
    depends_on:
      - jaeger
      - prometheus
      - tempo
      - loki
  jaeger:
    image: "jaegertracing/jaeger:2.5.0"
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "4417:4317"
      - "4418:4318"
    env_file:
      - .env.jaeger
  loki:
    image: grafana/loki:3.5.0
    container_name: loki
    restart: unless-stopped
    env_file:
      - .env.loki
    command: -config.file=/etc/loki/loki.yaml
    user: ":"
    ports:
       - "3100:3100"
       - "9096:9096"
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3100/ready 
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s
    volumes:
      - ./loki.yaml:/etc/loki/loki.yaml
      - ${DATA_DIR}/loki/data:/loki
  node-exporter:
    image: bitnami/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    env_file:
      - .env.node-exporter
  otel-collector:
    image: otel/opentelemetry-collector:0.123.0
    container_name: otel-collector
    restart: unless-stopped
    command: [ "--config=/etc/otel-collector.yaml" ]
    env_file:
      - .env.otel-collector
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
      - loki
      - prometheus
      - tempo
  portainer:
    image: portainer/portainer-ce:2.27.5
    container_name: portainer
    restart: unless-stopped
    ports:
      - "9000:9000"
    env_file:
      - .env.portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_DIR}/portainer/data:/data
  prometheus:
    image: bitnami/prometheus:3.3.1
    container_name: prometheus
    restart: unless-stopped
    user: ":"
    ports:
      - "9090:9090"
    command:
      - --web.enable-lifecycle
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --storage.tsdb.retention.time=7d
      - --enable-feature=native-histograms
    volumes:
      - ${DATA_DIR}/prometheus/data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    env_file:
      - .env.prometheus
    logging:
      driver: "json-file"
      options:
        max-size: "8m"
        max-file: "10"
  tempo:
    container_name: tempo
    image: grafana/tempo:2.7.2
    restart: unless-stopped
    env_file:
      - .env.tempo
    command:
      [
        "-config.file=/etc/tempo/config/tempo.yml",
        "--auth.enabled=false"
      ]
    volumes:
      - ./tempo.yml:/etc/tempo/config/tempo.yml
      - ${DATA_DIR}/tempo:/var
    ports:
      - "14268:14268" # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095"   # tempo grpc
      - "4321:4317"   # otlp grpc
      - "4320:4318"   # otlp http
      - "9411:9411"   # zipkin
networks:
  compose_network:
    driver: bridge
